# Define input files.
inputs:
  - name: "ncr"
    metadata: "data/ph/relaxedClean.tsv"
    sequences: "data/ph/relaxedClean.fasta"
  - name: "global_with_2_ncr"
    metadata: "data/ph/global_subsampled_metadata.tsv"
    sequences: "data/ph/global_subsampled_sequences.fasta"
  # - name: "batch1"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14.tar"
  # - name: "batch2"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-2.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-2.tar"
  # - name: "batch3"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-3.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-3.tar"
  # - name: "batch4"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-4.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-4.tar"
  # - name: "batch5"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-5.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-5.tar"
  # - name: "batch6"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-6.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-6.tar"
  # - name: "batch7"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-7.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-7.tar"
  # - name: "batch8"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-8.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-8.tar"
  # - name: "batch9"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-9.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_14-9.tar"
  # - name: "batch10"
  #   metadata: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_15.tar"
  #   sequences: "data/ph/gisaid_auspice_input_hcov-19_2023_03_04_15.tar"
  - name: "root_ref" # or however you want to call it
    metadata: "data/references_metadata.tsv"
    sequences: "data/references_sequences.fasta"

# Define build
builds:
  # First we'll define a regional-level build, focused on .
  # Then country level, continent level, to global level.
  # We'll define the sampling schemes below
  global: # Build name
    subsampling_scheme: global
    title: 'Global SARS-CoV-2 Sequences'
  # asia: # Build name
  #   region: Asia
  #   subsampling_scheme: asia
  #   title: 'SARS-CoV-2 Sequences in Asia'
  # philippines: # Build name
  #   region: Asia
  #   country: Philippines
  #   subsampling_scheme: philippines
  #   title: 'SARS-CoV-2 Sequences in the Philippines'
  # ncr: # Build name
  #   region: Asia
  #   country: Philippines
  #   subsampling_scheme: ncr
  #   title: 'SARS-CoV-2 Sequences in the National Capital Region'

# Define subsampling schemes
subsampling:
  global: #build-name
    global: #chose samples worldwide except the ncr samples, favor samples closely related to the ncr samples
      group_by: 'pango_lineage country year month' #group_by: 'country year month' #group_by: 'pango_lineage country year month'
      #seq_per_group: 5 #10 #30 #10 #20
      max_sequences: 750
      # min_date: --min-date 2020-01-01
      # max_date: --max-date 2020-07-31
      # query: --query "(date_submitted <= 2022-07-31)"
      query: --query "(division != 'National Capital Region')"
      priorities:
        type: 'proximity'
        focus: 'ncr'
    ncr: #chose here the ncr samples
      ####### try to include all ncr samples here....
      #max_sequences: 250 #5000 #100 ####### reducing this number solved the filtering issue for the global subsampling scheme
      #max_sequences: 300 #1000
      max_sequences: 75
      group_by: 'division year month'
      # min_date: --min-date 2020-01-01
      # max_date: --max-date 2020-07-31
      # query: --query "(date_submitted <= 2022-07-31)"
      query: --query "(division == 'National Capital Region')"
  # asia: #build-name
  #   asia: #chose samples from Asia except the ncr samples, favor samples closely related to the ncr samples
  #     group_by: 'pango_lineage country year month' #group_by: 'country year month' #group_by: 'pango_lineage country year month'
  #     seq_per_group: 5 #10 #30 #10 #5
  #     min_date: --min-date 2020-01-01
  #     max_date: --max-date 2020-07-31
  #     query: --query "(date_submitted <= 2022-07-31)"
  #     query: --query "(division != 'National Capital Region')"
  #     priorities:
  #       type: 'proximity'
  #       focus: 'ncr'
  #   ncr: #chose here the ncrsamples
  #     #max_sequences: 250 #5000 #100
  #     max_sequences: 300 #1000
  #     group_by: 'division year month'
  #     min_date: --min-date 2020-01-01
  #     max_date: --max-date 2020-07-31
  #     query: --query "(date_submitted <= 2022-07-31)"
  #     query: --query "(division == 'National Capital Region')"
  # philippines: #build-name
  #   philippines: #chose samples from Philippines except the ncr samples, favor samples closely related to the ncr samples
  #     group_by: 'pango_lineage division year month' #group_by: 'division year month' #group_by: 'pango_lineage division year month'
  #     seq_per_group: 5 #10 #30 #10 #15
  #     min_date: --min-date 2020-01-01
  #     max_date: --max-date 2020-07-31
  #     query: --query "(date_submitted <= 2022-07-31)"
  #     query: --query "(division != 'National Capital Region')"
  #     priorities:
  #       type: 'proximity'
  #       focus: 'ncr'
  #   ncr: #chose here the ncr samples
  #     #max_sequences: 250 #5000 #100
  #     max_sequences: 300 #1000
  #     group_by: 'division year month'
  #     min_date: --min-date 2020-01-01
  #     max_date: --max-date 2020-07-31
  #     query: --query "(date_submitted <= 2022-07-31)"
  #     query: --query "(division == 'National Capital Region')"
  #     #need
  # ###### commenting this out because there are errors in filtering/ querying the ncr samples.
  # ncr: #build-name
  #   ncr: #chose here the ncr samples
  #     #group_by: 'division year month'
  #     ##seq_per_group: 500 #300
  #     max_sequences: 300 #1000
  #     min_date: --min-date 2020-01-01
  #     max_date: --max-date 2020-07-31
  #     query: --query "(date_submitted <= 2022-07-31)"
  #     query: --query "(division == 'National Capital Region')"

# Specify what type of auspice_config to use
# and what description to display. These will apply to all the above builds.
files:
  description: 'my_profiles/ph/my_description.md'
  auspice_config: 'my_profiles/ph/auspice-config-custom-data.json'

# Define ancestral trait reconstruction
traits:
  global: ### build name
    sampling_bias_correction: 2.5
    columns: ['division'] ### traits to reconstruct; must match column names in metadata.tsv"
  # asia: ### build name
  #   sampling_bias_correction: 2.5
  #   columns: ['country'] ### traits to reconstruct; must match column names in metadata.tsv"
  # philippines: ### build name
  #   sampling_bias_correction: 2.5
  #   columns: ['division'] ### traits to reconstruct; must match column names in metadata.tsv"
  # ncr: ### build name
  #   sampling_bias_correction: 2.5
  #   columns: ['division'] ### traits to reconstruct; must match column names in metadata.tsv"

